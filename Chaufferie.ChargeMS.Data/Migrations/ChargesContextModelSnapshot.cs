// <auto-generated />
using System;
using Chaufferie.ChargeMS.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Chaufferie.ChargeMS.Data.Migrations
{
    [DbContext(typeof(ChargesContext))]
    partial class ChargesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Chaufferie.ChargesMS.Domain.Models.Reunion_aprés_cloture", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Reunion_aprés_cloture");
                });

            modelBuilder.Entity("Chaufferie.ChargesMS.Domain.Models.Reunion_avant_cloture", b =>
                {
                    b.Property<Guid>("Reunion_avant_clotureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Reunion_avant_clotureId");

                    b.ToTable("Reunion_avant_cloture");
                });

            modelBuilder.Entity("Chaufferie.ChargesMS.Domain.Models.Réunion", b =>
                {
                    b.Property<int>("RéunionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DateCreation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateDebutReunion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeureDebut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeureFin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Objet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TypeReunionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RéunionId");

                    b.HasIndex("TypeReunionId");

                    b.ToTable("Réunions");
                });

            modelBuilder.Entity("Chaufferie.ChargesMS.Domain.Models.TypeReunion", b =>
                {
                    b.Property<Guid>("TypeReunionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeReunionId");

                    b.ToTable("TypeReunion");
                });

            modelBuilder.Entity("Chaufferie.ChargesMS.Domain.Models.TypeReunion_sous_service", b =>
                {
                    b.Property<Guid>("TypeReunion_sous_serviceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeReunion_sous_serviceId");

                    b.ToTable("TypeReunion_sous_service");
                });

            modelBuilder.Entity("Chaufferie.ChargesMS.Domain.Models.Réunion", b =>
                {
                    b.HasOne("Chaufferie.ChargesMS.Domain.Models.TypeReunion", "TypeReunion")
                        .WithMany("Réunions")
                        .HasForeignKey("TypeReunionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
